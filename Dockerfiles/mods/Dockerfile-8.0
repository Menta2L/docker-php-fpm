# Auto-generated via Ansible: edit build/ansible/DOCKERFILES/Dockerfile-mods.j2 instead.
FROM menta2l/php-fpm:8.0-base as builder


###
### Install
###
RUN set -eux \
	&& DEBIAN_FRONTEND=noninteractive apt-get update -qq \
	&& DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends --no-install-suggests apt-utils \
	&& DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends --no-install-suggests \
		libbz2-dev \
		libenchant-dev \
		libfreetype6-dev \
		libgmp-dev \
		libicu-dev \
		libjpeg-dev \
		libpng-dev \
		libpspell-dev \
		libsasl2-dev \
		libsodium-dev \
		libssl-dev \
		libtidy-dev \
		libvpx-dev \
		libwebp-dev \
		libxpm-dev \
		libzip-dev \
		zlib1g-dev \
		ca-certificates \
		git


# Fix timezone (only required for testing to stop php -v and php-fpm -v from complaining to stderr)
RUN set -eux \
	&& echo "date.timezone=UTC" > /usr/local/etc/php/php.ini


###
### Install and enable PHP modules
###
# Enable ffi if it exists
RUN set -eux \
	&& if [ -f /usr/local/etc/php/conf.d/docker-php-ext-ffi.ini ]; then \
			echo "ffi.enable = 1" >> /usr/local/etc/php/conf.d/docker-php-ext-ffi.ini; \
		fi

# -------------------- Installing PHP Extension: bcmath --------------------
RUN set -eux \
	# Installation: Generic
	# Type:         Built-in extension
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) bcmath \
	&& true


# -------------------- Installing PHP Extension: bz2 --------------------
RUN set -eux \
	# Installation: Generic
	# Type:         Built-in extension
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) bz2 \
	&& true


# -------------------- Installing PHP Extension: calendar --------------------
RUN set -eux \
	# Installation: Generic
	# Type:         Built-in extension
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) calendar \
	&& true


# -------------------- Installing PHP Extension: enchant --------------------
RUN set -eux \
	# Installation: Generic
	# Type:         Built-in extension
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) enchant \
	&& true


# -------------------- Installing PHP Extension: exif --------------------
RUN set -eux \
	# Installation: Generic
	# Type:         Built-in extension
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) exif \
	&& true


# -------------------- Installing PHP Extension: gd --------------------
RUN set -eux \
	# Generic pre-command
	&& ln -s /usr/lib/x86_64-linux-gnu/libXpm.* /usr/lib/ \
	# Installation: Version specific
	# Type:         Built-in extension
	# Custom:       configure command
	&& docker-php-ext-configure gd --enable-gd --with-webp --with-jpeg --with-xpm --with-freetype \
	# Installation
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) gd \
	&& true


# -------------------- Installing PHP Extension: gettext --------------------
RUN set -eux \
	# Installation: Generic
	# Type:         Built-in extension
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) gettext \
	&& true


# -------------------- Installing PHP Extension: gmp --------------------
RUN set -eux \
	# Generic pre-command
	&& ln /usr/include/x86_64-linux-gnu/gmp.h /usr/include/ \
	# Installation: Generic
	# Type:         Built-in extension
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) gmp \
	&& true


# -------------------- Installing PHP Extension: intl --------------------
RUN set -eux \
	# Installation: Generic
	# Type:         Built-in extension
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) intl \
	&& true


# -------------------- Installing PHP Extension: mongodb --------------------
RUN set -eux \
	# Installation: Version specific
	# Type:         GIT extension
	&& git clone https://github.com/mongodb/mongo-php-driver /tmp/mongodb \
	&& cd /tmp/mongodb \
	# Custom:       Install command
	&& git submodule update --init \
&& phpize \
&& ./configure --enable-mongodb \
&& make -j$(getconf _NPROCESSORS_ONLN) \
&& make install \
 \
	# Enabling
	&& docker-php-ext-enable mongodb \
	&& true


# -------------------- Installing PHP Extension: mysqli --------------------
RUN set -eux \
	# Installation: Generic
	# Type:         Built-in extension
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) mysqli \
	&& true


# -------------------- Installing PHP Extension: opcache --------------------
RUN set -eux \
	# Installation: Generic
	# Type:         Built-in extension
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) opcache \
	&& true


# -------------------- Installing PHP Extension: pcntl --------------------
RUN set -eux \
	# Installation: Generic
	# Type:         Built-in extension
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) pcntl \
	&& true


# -------------------- Installing PHP Extension: pdo_mysql --------------------
RUN set -eux \
	# Installation: Generic
	# Type:         Built-in extension
	# Custom:       configure command
	&& docker-php-ext-configure pdo_mysql --with-zlib-dir=/usr \
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) pdo_mysql \
	&& true


# -------------------- Installing PHP Extension: pspell --------------------
RUN set -eux \
	# Installation: Generic
	# Type:         Built-in extension
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) pspell \
	&& true


# -------------------- Installing PHP Extension: redis --------------------
RUN set -eux \
	# Installation: Version specific
	# Type:         GIT extension
	&& git clone https://github.com/phpredis/phpredis /tmp/redis \
	&& cd /tmp/redis \
	# Custom:       Branch
	&& git checkout $(git for-each-ref --format='%(refname)' refs/tags | grep -E 'tags/[.0-9]+$' | sed 's|.*tags/||g' | sort -V | tail -1) \
	# Custom:       Install command
	&& sed -i'' 's/, ZSTR_LEN(ra->algorithm)//g' redis_array_impl.c \
&& sed -i'' 's|.*sctx->cb\.no_separation.*||g' library.c \
&& sed -i'' 's|.*sctx->cb\.no_separation.*||g' redis_array_impl.c \
&& sed -i'' 's|.*sctx->cb\.no_separation.*||g' cluster_library.c \
&& sed -i'' 's|.*->no_separation.*||g' redis_array_impl.c \
&& phpize \
&& ./configure --enable-redis \
&& make -j$(getconf _NPROCESSORS_ONLN) \
&& make install \
 \
	# Enabling
	&& docker-php-ext-enable redis \
	&& true


# -------------------- Installing PHP Extension: sockets --------------------
RUN set -eux \
	# Installation: Generic
	# Type:         Built-in extension
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) sockets \
	&& true


# -------------------- Installing PHP Extension: sodium --------------------
RUN set -eux \
	# Installation: Generic
	# Type:         Built-in extension
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) sodium \
	&& true


# -------------------- Installing PHP Extension: sysvmsg --------------------
RUN set -eux \
	# Installation: Generic
	# Type:         Built-in extension
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) sysvmsg \
	&& true


# -------------------- Installing PHP Extension: sysvsem --------------------
RUN set -eux \
	# Installation: Generic
	# Type:         Built-in extension
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) sysvsem \
	&& true


# -------------------- Installing PHP Extension: tidy --------------------
RUN set -eux \
	# Installation: Generic
	# Type:         Built-in extension
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) tidy \
	&& true


# -------------------- Installing PHP Extension: zip --------------------
RUN set -eux \
	# Installation: Generic
	# Type:         Built-in extension
	# Custom:       configure command
	&& docker-php-ext-configure zip --with-zlib-dir=/usr --with-pcre-dir=/usr --with-libzip \
	&& docker-php-ext-install -j$(getconf _NPROCESSORS_ONLN) zip \
	&& true




# Fix php.ini settings for enabled extensions
RUN set -eux \
	&& chmod +x "$(php -r 'echo ini_get("extension_dir");')"/*

# Fix oracle dir for images that don't have oci installed
RUN set -eux \
	&& mkdir -p /usr/lib/oracle/

# Shrink everything down
RUN set -eux \
	&& (find /usr/local/bin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2>/dev/null || true) \
	&& (find /usr/local/lib -type f -print0 | xargs -n1 -0 strip --strip-all -p 2>/dev/null || true) \
	&& (find /usr/local/sbin -type f -print0 | xargs -n1 -0 strip --strip-all -p 2>/dev/null || true)



# Auto-generated via Ansible: edit build/ansible/DOCKERFILES/Dockerfile-mods.j2 instead.
FROM menta2l/php-fpm:8.0-base as final
MAINTAINER "vesco" <vesco@jobs.bg>

###
### Labels
###
# https://github.com/opencontainers/image-spec/blob/master/annotations.md
#LABEL "org.opencontainers.image.created"=""
#LABEL "org.opencontainers.image.version"=""
#LABEL "org.opencontainers.image.revision"=""
LABEL "maintainer"="vesco <vesco@jobs.bg>"
LABEL "org.opencontainers.image.authors"="vesco <vesco@jobs.bg>"
LABEL "org.opencontainers.image.url"="https://github.com/devilbox/docker-php-fpm"
LABEL "org.opencontainers.image.documentation"="https://github.com/devilbox/docker-php-fpm"
LABEL "org.opencontainers.image.source"="https://github.com/devilbox/docker-php-fpm"
LABEL "org.opencontainers.image.vendor"="devilbox"
LABEL "org.opencontainers.image.licenses"="MIT"
LABEL "org.opencontainers.image.ref.name"="8.0-mods"
LABEL "org.opencontainers.image.title"="PHP-FPM 8.0-mods"
LABEL "org.opencontainers.image.description"="PHP-FPM 8.0-mods"


###
### Copy artifacts from builder
###
ARG EXT_DIR
COPY --from=builder ${EXT_DIR}/ ${EXT_DIR}/
COPY --from=builder /usr/local/etc/php/conf.d/ /usr/local/etc/php/conf.d/
COPY --from=builder /usr/local/bin/ /usr/local/bin/
COPY --from=builder /usr/local/lib/ /usr/local/lib/
COPY --from=builder /usr/lib/oracle/ /usr/lib/oracle/


###
### Install
###
RUN set -eux \
	&& DEBIAN_FRONTEND=noninteractive apt-get update -qq \
	&& DEBIAN_FRONTEND=noninteractive apt-get install -qq -y --no-install-recommends --no-install-suggests \
	libaspell15 \
	libenchant1c2a \
	libfreetype6 \
	libicu63 \
	libjpeg62-turbo \
	libpng16-16 \
	libtidy5deb1 \
	libvpx5 \
	libwebp6 \
	libxpm4 \
	libzip4 \
	ca-certificates \
	&& rm -rf /var/lib/apt/lists/* \
	\
	&& update-ca-certificates


###
### Post Install
###
###
### Verify
###
RUN set -eux \
	&& echo "date.timezone=UTC" > /usr/local/etc/php/php.ini \
	&& php -v | grep -oE 'PHP\s[.0-9]+' | grep -oE '[.0-9]+' | grep '^8.0' \
	&& /usr/local/sbin/php-fpm --test \
	\
	&& PHP_ERROR="$( php -v 2>&1 1>/dev/null )" \
	&& if [ -n "${PHP_ERROR}" ]; then echo "${PHP_ERROR}"; false; fi \
	&& PHP_ERROR="$( php -i 2>&1 1>/dev/null )" \
	&& if [ -n "${PHP_ERROR}" ]; then echo "${PHP_ERROR}"; false; fi \
	\
	&& PHP_FPM_ERROR="$( php-fpm -v 2>&1 1>/dev/null )" \
	&& if [ -n "${PHP_FPM_ERROR}" ]; then echo "${PHP_FPM_ERROR}"; false; fi \
	&& PHP_FPM_ERROR="$( php-fpm -i 2>&1 1>/dev/null )" \
	&& if [ -n "${PHP_FPM_ERROR}" ]; then echo "${PHP_FPM_ERROR}"; false; fi \
	&& rm -f /usr/local/etc/php/php.ini \
	\
	&& php -m | grep -oiE '^bcmath$' \
	&& php-fpm -m | grep -oiE '^bcmath$' \
	&& php -m | grep -oiE '^bz2$' \
	&& php-fpm -m | grep -oiE '^bz2$' \
	&& php -m | grep -oiE '^calendar$' \
	&& php-fpm -m | grep -oiE '^calendar$' \
	&& php -m | grep -oiE '^ctype$' \
	&& php-fpm -m | grep -oiE '^ctype$' \
	&& php -m | grep -oiE '^curl$' \
	&& php-fpm -m | grep -oiE '^curl$' \
	&& php -m | grep -oiE '^dom$' \
	&& php-fpm -m | grep -oiE '^dom$' \
	&& php -m | grep -oiE '^enchant$' \
	&& php-fpm -m | grep -oiE '^enchant$' \
	&& php -m | grep -oiE '^exif$' \
	&& php-fpm -m | grep -oiE '^exif$' \
	&& php -m | grep -oiE '^fileinfo$' \
	&& php-fpm -m | grep -oiE '^fileinfo$' \
	&& php -m | grep -oiE '^filter$' \
	&& php-fpm -m | grep -oiE '^filter$' \
	&& php -m | grep -oiE '^gd$' \
	&& php-fpm -m | grep -oiE '^gd$' \
	&& php -m | grep -oiE '^gettext$' \
	&& php-fpm -m | grep -oiE '^gettext$' \
	&& php -m | grep -oiE '^gmp$' \
	&& php-fpm -m | grep -oiE '^gmp$' \
	&& php -m | grep -oiE '^hash$' \
	&& php-fpm -m | grep -oiE '^hash$' \
	&& php -m | grep -oiE '^iconv$' \
	&& php-fpm -m | grep -oiE '^iconv$' \
	&& php -m | grep -oiE '^intl$' \
	&& php-fpm -m | grep -oiE '^intl$' \
	&& php -m | grep -oiE '^json$' \
	&& php-fpm -m | grep -oiE '^json$' \
	&& php -m | grep -oiE '^libxml$' \
	&& php-fpm -m | grep -oiE '^libxml$' \
	&& php -m | grep -oiE '^mbstring$' \
	&& php-fpm -m | grep -oiE '^mbstring$' \
	&& php -m | grep -oiE '^mongodb$' \
	&& php-fpm -m | grep -oiE '^mongodb$' \
	&& php -m | grep -oiE '^mysqli$' \
	&& php-fpm -m | grep -oiE '^mysqli$' \
	&& php -m | grep -oiE '^mysqlnd$' \
	&& php-fpm -m | grep -oiE '^mysqlnd$' \
	&& php -m | grep -oiE '^Zend Opcache$' \
	&& php-fpm -m | grep -oiE '^Zend Opcache$' \
	&& php -m | grep -oiE '^openssl$' \
	&& php-fpm -m | grep -oiE '^openssl$' \
	&& php -m | grep -oiE '^pcntl$' \
	&& php-fpm -m | grep -oiE '^pcntl$' \
	&& php -m | grep -oiE '^pcre$' \
	&& php-fpm -m | grep -oiE '^pcre$' \
	&& php -m | grep -oiE '^pdo$' \
	&& php-fpm -m | grep -oiE '^pdo$' \
	&& php -m | grep -oiE '^pdo_mysql$' \
	&& php-fpm -m | grep -oiE '^pdo_mysql$' \
	&& php -m | grep -oiE '^pdo_sqlite$' \
	&& php-fpm -m | grep -oiE '^pdo_sqlite$' \
	&& php -m | grep -oiE '^phar$' \
	&& php-fpm -m | grep -oiE '^phar$' \
	&& php -m | grep -oiE '^posix$' \
	&& php-fpm -m | grep -oiE '^posix$' \
	&& php -m | grep -oiE '^pspell$' \
	&& php-fpm -m | grep -oiE '^pspell$' \
	&& php -m | grep -oiE '^readline$' \
	&& php -m | grep -oiE '^redis$' \
	&& php-fpm -m | grep -oiE '^redis$' \
	&& php -m | grep -oiE '^reflection$' \
	&& php-fpm -m | grep -oiE '^reflection$' \
	&& php -m | grep -oiE '^session$' \
	&& php-fpm -m | grep -oiE '^session$' \
	&& php -m | grep -oiE '^simplexml$' \
	&& php-fpm -m | grep -oiE '^simplexml$' \
	&& php -m | grep -oiE '^sockets$' \
	&& php-fpm -m | grep -oiE '^sockets$' \
	&& php -m | grep -oiE '^sodium$' \
	&& php-fpm -m | grep -oiE '^sodium$' \
	&& php -m | grep -oiE '^spl$' \
	&& php-fpm -m | grep -oiE '^spl$' \
	&& php -m | grep -oiE '^sysvmsg$' \
	&& php-fpm -m | grep -oiE '^sysvmsg$' \
	&& php -m | grep -oiE '^sysvsem$' \
	&& php-fpm -m | grep -oiE '^sysvsem$' \
	&& php -m | grep -oiE '^tidy$' \
	&& php-fpm -m | grep -oiE '^tidy$' \
	&& php -m | grep -oiE '^tokenizer$' \
	&& php-fpm -m | grep -oiE '^tokenizer$' \
	&& php -m | grep -oiE '^xml$' \
	&& php-fpm -m | grep -oiE '^xml$' \
	&& php -m | grep -oiE '^xmlreader$' \
	&& php-fpm -m | grep -oiE '^xmlreader$' \
	&& php -m | grep -oiE '^xmlwriter$' \
	&& php-fpm -m | grep -oiE '^xmlwriter$' \
	&& php -m | grep -oiE '^zip$' \
	&& php-fpm -m | grep -oiE '^zip$' \
	&& true


###
### Ports
###
EXPOSE 9000


###
### Entrypoint
###
CMD ["/usr/local/sbin/php-fpm"]
ENTRYPOINT ["/docker-entrypoint.sh"]
